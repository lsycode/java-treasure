1、对象：问题空间中的元素及其在解空间中的表示称为对象。
    a、万物皆对象
    b、程序是对象的集合
    c、每个对象都有自己的由其他对象所组成的存储
    d、每个对象都是某个类(class)的一个实例(instance)
2、高内聚，每个对象都可以很好的完成一项任务，但不试图做更多的事情。
3、组合：使用现有的类合成新的类
4、完全采用了动态内存分配方式，在堆（heap）的内存池中动态地创建对象，直到运行时才知道需要多少个对象。需要大量的时间在堆中分配存储空间，可能
要远远大于在堆栈中创建存储空间的时间。在堆栈中创建存储空间和释放通常个需要一条汇编指令，分别对应将栈顶指针向下移动和向上移动。
使用new来勾践对象的动态实例。基本类型只是一个特例。
5、String s 创建的只是一个引用，并不是对象。
6、存储数据：1、寄存器，不能直接控制。2、栈，RAM中。3、堆，RAM。4、常量存储，代码内部。5、非RAM存储
7、基本类型：boolean char 16bit ,byte 8,short 16,int 32 ,long 64 , float 32,double 64
8、变量作为类的成员时，会给予默认值，boolean false,char '\u0000' byte 0,int 0...其它情况下编译错误。
9、字符串中的每个字符的尺寸都是16位或2个字节
10、static字段对每个类来说都只有一份存储空间，非static字段每个对象都有一个存储空间
11、逻辑表达式短路
12、负数：反码加1
13、&与,两个位都是1才输出1，|或，一个位是1就输出1，^异或，某一个是1，但不全是1，生成1，~非，取反
14、<<左移n位，低位补0，>>右移，高位补0或1，>>>右移，高位补0
15、构造器初始化
16、重载，方法名相同，参数不同，构造器使用了重载
17、return this 返回对当前对象的引用 P84
18、static方法就是没有this的方法，在static 内部不能调用非静态方法，反过来可以。
19、finalize()并非析构函数
20、垃圾回收只与内存有关，在内存耗尽的时候，执行垃圾回收。
21、数组的直接复制是引用的复制
22、可变参数列表
